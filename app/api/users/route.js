import { dbConnect } from '../../../lib/mongodb'; import User from '../../../models/User'; import { NextResponse } from 'next/server'; import bcrypt from 'bcryptjs'; import { getUserFromCookie } from '../../../lib/jwt'; export async function GET(){ await dbConnect(); const me = getUserFromCookie(); if(!me || me.role !== 'admin') return NextResponse.json({ error:'forbidden' }, { status:403 }); const users = await User.find({}, { passwordHash:0 }); return NextResponse.json(users); } export async function POST(req){ await dbConnect(); const me = getUserFromCookie(); if(!me || me.role !== 'admin') return NextResponse.json({ error:'forbidden' }, { status:403 }); const body = await req.json(); const hash = await bcrypt.hash(body.password||'changeme', 10); const user = await User.create({ username: body.username, passwordHash: hash, role: body.role || 'contributor', mustChangePassword: true }); return NextResponse.json({ id: user._id, username: user.username, role: user.role }); }